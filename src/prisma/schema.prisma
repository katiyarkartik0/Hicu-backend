generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PG_SQL_DATABASE_URL")
}

model Account {
  id      Int             @id @default(autoincrement())
  name    String
  members AccountMember[]

  description String?
  website     String?
  svgIcon     String?

  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  AccountIntegrations AccountIntegration[]
}

model Member {
  id       Int             @id @default(autoincrement())
  name     String?
  email    String          @unique
  password String
  accounts AccountMember[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model AccountMember {
  id Int @id @default(autoincrement())

  accountId Int
  memberId  Int

  status MemberStatus @default(INVITED)
  scope  String[]

  account Account @relation(fields: [accountId], references: [id])
  member  Member  @relation(fields: [memberId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([accountId, memberId])
}

enum MemberStatus {
  INVITED
  ACTIVE
  REMOVED
}

model Automation {
  id           Int            @id @default(autoincrement())
  mediaId      String
  action       Json
  UserProgress UserProgress[]
}

model UserProgress {
  id           Int        @id @default(autoincrement())
  automationId Int
  automation   Automation @relation(fields: [automationId], references: [id])
  userId       String     @unique
  trigger      String
}

//this has been created so that this could be sent to FE to render a page to display all the featured integrations, config to render the form
model Integration {
  id                  Int                  @id @default(autoincrement())
  name                String               @unique
  image               String?
  description         String?
  config              Json
  accountIntegrations AccountIntegration[]
}

//this has been created so that user from FE can create integration and add entry
model AccountIntegration {
  id            Int         @id @default(autoincrement())
  accountId     Int
  integrationId Int
  config        Json
  account       Account     @relation(fields: [accountId], references: [id])
  integration   Integration @relation(fields: [integrationId], references: [id])

  @@unique([accountId, integrationId])
}
